@charset "utf-8";
@import "type";

/* --------------------------
	Custom variables
----------------------------*/
$text-light:					#949CB1;
$text-base: 					#676B7F;
$text-bold:						#454850;

$bg:							#F8F9FD;
$border-color:					#E5E6EB;
$border-light-color:			#E5E5EB;
$card-header-footer-color:		#EFF3FA;

/* --------------------------
	Bulma's global variables
----------------------------*/
$family-sans-serif: "FaktProSoft", system-ui, -apple-system, BlinkMacSystemFont, "San Francisco", Roboto, "Segoe UI", "Helvetica Neue", sans-serif;

// Colors
$body-background-color: $bg;
$primary: #4474E4;
$dark: #1D2C4C;

$radius-large: 3px;

// Text
$font-size-base:              1rem !default;
$text: $text-base;

$h1-font-size:                $font-size-base * 2.5 !default;
$h2-font-size:                $font-size-base * 2 !default;
$h3-font-size:                $font-size-base * 1.75 !default;
$h4-font-size:                $font-size-base * 1.5 !default;
$h5-font-size:                $font-size-base * 1.25 !default;
$h6-font-size:                $font-size-base !default;

// $defaul-shadow: none;
$default-shadow: 0 0 0 1px rgba(63,63,68,0.03), 0 1px 3px 0 rgba(63,63,68,0.05);
$default-border: 1px solid $border-color;

// Box
$box-shadow: $default-shadow;
$box-card-padding: 1.5rem;

// Card
$card-shadow: $default-shadow;

// Form
// Input
$input-color: $text-bold;
$input-shadow: none;
$input-hover-color: $text-bold;
$input-hover-border-color: $border-color;
$input-focus-color: $text-bold;
$input-border-color: $border-color;
$input-focus-box-shadow-size: 0;
$input-focus-box-shadow-color: transparent;
$input-focus-border-color: $primary;

// Button 
$button-padding-vertical: 0.5em;

// Navbar
$navbar-dropdown-item-hover-background-color: transparent;

// Form
$help-size: 0.85rem;

// Generic
$link: $primary;
$link-hover: darken($link, 10%);

// Menu
$menu-item-color: $text-base;
$menu-item-hover-color: $link-hover;
$menu-item-hover-background-color: transparent;

@import "bulma";
@import "mixins";
@import "space";

h1, .h1 { font-size: $h1-font-size; }
h2, .h2 { font-size: $h2-font-size; }
h3, .h3 { font-size: $h3-font-size; }
h4, .h4 { font-size: $h4-font-size; }
h5, .h5 { font-size: $h5-font-size; }
h6, .h6 { font-size: $h6-font-size; }

h1,h2, h3, h4, h5, h6,
.h1, .h2, .h3, .h4, .h5, .h6 {
	font-weight: $type-400;
	color: $text-bold;
}

// Utilities
.border-top {
	border-top: 1px solid $border-color;
}

.border-bottom {
	border-bottom: 1px solid $border-color;
}

.dd {
	@include dd();
}

html, body {
	letter-spacing: 0;
	-webkit-font-smoothing: antialiased;
	@extend .is-fullheight;
}

strong {
	font-weight: $type-500;
	color: $text-bold;
}

.is-main-content {
	padding: 2.3rem;
}

.menu {
	display: flex;
	min-height: 100vh;
	flex-direction: column;

	#wrapper {
	  flex: 1;
	}
}

.is-sidebar-menu {
	@extend .is-fullheight;
	@extend .is-hidden-mobile;

	background-color: white;
	padding: 2.3rem;
	flex: 0 0 250px;
	border-right: $default-border;
	display: flex;
	overflow-y: auto;
	flex-direction: column;

	.menu-list {
		li ul {
			margin: 0.65rem;
			padding-left: .45rem;
		}

		a {
			display: flex;
			font-size: 0.9rem;
			font-weight: $type-500;

			.feather {
				@extend .mr-3;
				position: relative;
				top: 0;
			}

			&.is-active {
				background: none;
				color: $primary;
				font-weight: $type-500;
			}
		}

		& > li > a {
			padding-left: 0;
			padding-right: 0;
		}

		& span {
			align-self: flex-start;
		}
	}

	.menu-list-icon {
		@extend .mr-3;
	}
}

.menu-list {
	padding-bottom: 1rem;
}

.menu-label,
.menu-label:not(:last-child) {
	margin-top: .5rem;
	margin-bottom: .5rem;
	letter-spacing: 0.05em;
	font-weight: $type-500; 
}

.navbar {
	border-bottom: $default-border;
}

.navbar-item,
.navbar-link {
	padding: 1rem .9rem;
}

.navbar-link {
	padding-right: 3rem;
}

.navbar-brand {
	padding: 0;
	margin: 0;
	.navbar-item {
		margin: 0;
		flex: 0 0 250px;
	}
}

.navbar-dropdown {
	@include box-shadow(none);
	@include border-radius($radius-large);
	border: $default-border;

	top: 104%;
	animation-name: animate-flyout;
	animation-duration: 0.2s;
}

.subtitle,
.title {
	color: $text-bold;
}

.title {
	font-weight: 500;
}

.subtitle {
	font-weight: $type-300;
	font-size: 1.15rem;

	strong {
		font-weight: $type-500;
	}
}

.card-content,
.box {
	border: $default-border;
	padding: $box-card-padding;	
}

$select-padding-vertical: calc(0.625em - #{$control-border-width});
$select-padding-horizontal: calc(.85em - #{$control-border-width});
$input-padding-vertical: calc(1.375em - #{$control-border-width});
$input-padding-horizontal: calc(.85em - #{$control-border-width});
$input-icon-size: 2.83em;

%borderable {
	&:focus,
	&.is-focused,
	&:active,
	&.is-active {
		box-shadow: 0 0 0 1px $primary;
	}

	// Colors
	@each $name, $pair in $colors {
		$color: nth($pair, 1);
		&.is-#{$name} {
			&:focus,
			&.is-focused,
			&:active,
			&.is-active {
				box-shadow: 0 0 0 1px $color;
			}
		}
	}
}

.control {
	.input {
		@include transition(all 250ms ease);
		@include border-radius($radius-large);
		@extend %borderable;

		padding-bottom: $input-padding-vertical;
		padding-left: $input-padding-horizontal;
		padding-right: $input-padding-horizontal;
		padding-top: $input-padding-vertical;
	}

	.textarea {
		@include transition(all 250ms ease);
		@include border-radius($radius-large);
		@extend %borderable;
	}

	&.has-icons-left,
	&.has-icons-right {
		.icon {
			@include transition(color 250ms ease);

			width: 2.56em;
			height: $input-icon-size;
		}
	}


	&.has-icons-left,
	&.has-icons-right {
		.icon {
			@include transition(color 250ms ease);
			width: 2.56em;
			height: $input-icon-size;
		}

		.input,
		.select select {
			&:focus,
			&.is-focused,
			&:active,
			&.is-active {
				& ~ .icon {
					color: $primary;
				}
			}
			@each $name, $pair in $colors {
				$color: nth($pair, 1);
				&.is-#{$name} {
					&:focus,
					&.is-focused,
					&:active,
					&.is-active {
						& ~ .icon {
							color: $color;
						}
						box-shadow: 0 0 0 1px $color;
					}
				}
			}
		}
	}

	.select select {
		@extend %borderable;
	}
}

.select {
	select {
		height: 2.83em;
		padding-top: $select-padding-vertical;
		padding-bottom: $select-padding-vertical;
		padding-left: $select-padding-horizontal;
		padding-right: $select-padding-horizontal;
	}

	&:not(.is-multiple):not(.is-loading)::after {
  		margin-top: -0.1em;
	}
}

.label {
	font-weight: $type-400;
	color: $text-bold;
}

.button {
	height: 2.75em
}

// Checkboxes
$checkbox-radio-size: 1.43rem;

.checkbox, .radio {

	display: block;
	margin-top: 20px;
	margin-bottom: 20px;
	padding-left: 0;

	&.checkbox-inline,
	&.radio-inline {
		display: inline-block;
		margin-right: 10px;
	}

	& + .radio {
		margin-left: 0;
	}

	label {
		line-height: $checkbox-radio-size;
		font-weight: normal;
		color: $text-base;

		&:hover {
			cursor: pointer;
		}

		input[type="checkbox"],
		input[type="radio"] {
			
			-webkit-appearance:none;
			-moz-appearance:none;
			appearance:none;

			& + span {

				&::before {
					font-size: .8rem;
					display: inline-block;
					font-style: normal;
					font-variant: normal;
					text-rendering: auto;
					-webkit-font-smoothing: antialiased;
					font-family: fontello;
					font-weight: 900;
					content: '';
					color: white;
					position: relative;
					border: 1px solid $border-color;
					width: $checkbox-radio-size;
					height: $checkbox-radio-size;
					float: left;
					margin-right: .9rem;
					margin-right: 0.5em;

					@include transition(all 350ms ease);
					@include border-radius(.25rem);
				}
			}

			&:checked + span:before {
				background-color: $primary;
				content: '\e800';
				border-color: transparent;
				text-align: center;
			}

			&:focus + span:before {
				border-color: $primary;
			}

			&:disabled + span {
				color: $text-light;
				cursor: not-allowed;

				&:before {
					background-color: $bg;
					border-color: $border-light-color;
				}
			}
		}

		input[type="checkbox"]:hover + span:before {
			text-align: center;
			content: '\e800';
			color: $border-light-color;
		}

		input[type="checkbox"]:checked + span:before {
			content: '\e800';
		}
		input[type="checkbox"]:checked:hover + span:before {
			color: white;
		}

		input[type="radio"] {

			& + span {
				&:before {
					@include border-radius(100%);
				}
			}

			&:not(:checked):not(:disabled):focus + span:before,
			&:not(:checked):not(:disabled):hover + span:before {
				background-color: white;
				border: 1px solid $border-color;
				color: $border-light-color;
				content: '\f111';
				line-height: $checkbox-radio-size;
				text-align: center;
			}

			&:not(:disabled):checked:focus + span:before {
				border: 1px solid $primary;
			}

			&:checked + span:before {
				background-color: white;
				border: 1px solid $border-color;
				color: $primary;
				content: '\f111';
				line-height: $checkbox-radio-size;
			}
		}
	}
}


// Animations
@keyframes animate-flyout {
	0% {
		@include translateY(-5px);
		@include opacity(0);
	}
	100% {
		@include translateY(0);
		@include opacity(1);
	}
}